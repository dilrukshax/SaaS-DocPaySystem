openapi: 3.0.3
info:
  title: Document Service API
  description: API for document management, versioning, and OCR processing
  version: 1.0.0
  contact:
    name: Document Service Team
    email: api-support@company.com

servers:
  - url: http://localhost:5001/api
    description: Development server
  - url: https://api.saas-docpay.com/documents
    description: Production server

paths:
  /documents:
    get:
      summary: Get documents
      description: Retrieve a paginated list of documents with optional filtering
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 10
        - name: search
          in: query
          description: Search term for document name or content
          schema:
            type: string
        - name: tags
          in: query
          description: Filter by tags
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
    
    post:
      summary: Upload document
      description: Upload a new document to the system
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                name:
                  type: string
                description:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Invalid request
        '413':
          description: File too large

  /documents/{id}:
    get:
      summary: Get document by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Document found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: Document not found

    put:
      summary: Update document
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
      responses:
        '200':
          description: Document updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

    delete:
      summary: Delete document
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Document deleted successfully
        '404':
          description: Document not found

  /documents/{id}/versions:
    get:
      summary: Get document versions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Document versions retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentVersion'

  /documents/{id}/ocr:
    post:
      summary: Process OCR
      description: Extract text from document using OCR
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OCR processing completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OCRResult'

components:
  schemas:
    Document:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        fileSize:
          type: integer
          format: int64
        mimeType:
          type: string
        tags:
          type: array
          items:
            type: string
        version:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        url:
          type: string
          format: uri

    UpdateDocumentRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string

    DocumentVersion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        documentId:
          type: string
          format: uuid
        version:
          type: integer
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        changeLog:
          type: string
        url:
          type: string
          format: uri

    OCRResult:
      type: object
      properties:
        documentId:
          type: string
          format: uuid
        extractedText:
          type: string
        confidence:
          type: number
          format: float
        metadata:
          type: object
        processedAt:
          type: string
          format: date-time

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
