version: '3.8'

services:
  # Infrastructure Services
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: saas-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=DocPay123!@#
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - saas-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P DocPay123!@# -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.2-alpine
    container_name: saas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Message Queue (using RabbitMQ as Azure Service Bus alternative for local dev)
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: saas-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=DocPay123!
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  apigateway:
    build:
      context: .
      dockerfile: gateway/ApiGateway/Dockerfile
    container_name: saas-apigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=DocPay123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__Redis=redis:6379
      - Jwt__Issuer=SaaS.DocPaySystem
      - Jwt__Audience=SaaS.DocPaySystem.API
      - Jwt__SecretKey=your-super-secret-key-that-is-at-least-32-characters-long-for-production
    ports:
      - "5000:80"
      - "5001:443"
    volumes:
      - ~/.aspnet/https:/https:ro
      - ./logs/apigateway:/app/logs
    depends_on:
      - redis
      - userservice
      - paymentservice
      - notificationservice
      - workflowservice
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # User Service
  userservice:
    build:
      context: .
      dockerfile: services/UserService/Dockerfile
    container_name: saas-userservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=DocPay123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SaaS_DocPaySystem_User;User Id=sa;Password=DocPay123!@#;TrustServerCertificate=true;
      - ConnectionStrings__ServiceBus=amqp://admin:DocPay123!@rabbitmq:5672
      - Jwt__Issuer=SaaS.DocPaySystem
      - Jwt__Audience=SaaS.DocPaySystem.API
      - Jwt__SecretKey=your-super-secret-key-that-is-at-least-32-characters-long-for-production
    ports:
      - "5101:80"
      - "5102:443"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Payment Service
  paymentservice:
    build:
      context: .
      dockerfile: services/PaymentService/Dockerfile
    container_name: saas-paymentservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=DocPay123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SaaS_DocPaySystem_Payment;User Id=sa;Password=DocPay123!@#;TrustServerCertificate=true;
      - ConnectionStrings__ServiceBus=amqp://admin:DocPay123!@rabbitmq:5672
      - Stripe__SecretKey=${STRIPE_SECRET_KEY}
      - Stripe__PublishableKey=${STRIPE_PUBLISHABLE_KEY}
      - Stripe__WebhookSecret=${STRIPE_WEBHOOK_SECRET}
      - Jwt__Issuer=SaaS.DocPaySystem
      - Jwt__Audience=SaaS.DocPaySystem.API
      - Jwt__SecretKey=your-super-secret-key-that-is-at-least-32-characters-long-for-production
    ports:
      - "5201:80"
      - "5202:443"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Notification Service
  notificationservice:
    build:
      context: .
      dockerfile: services/NotificationService/Dockerfile
    container_name: saas-notificationservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=DocPay123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SaaS_DocPaySystem_Notification;User Id=sa;Password=DocPay123!@#;TrustServerCertificate=true;
      - ConnectionStrings__ServiceBus=amqp://admin:DocPay123!@rabbitmq:5672
      - SendGrid__ApiKey=${SENDGRID_API_KEY}
      - SendGrid__FromEmail=noreply@docpaysystem.com
      - SendGrid__FromName=DocPay System
      - Jwt__Issuer=SaaS.DocPaySystem
      - Jwt__Audience=SaaS.DocPaySystem.API
      - Jwt__SecretKey=your-super-secret-key-that-is-at-least-32-characters-long-for-production
    ports:
      - "5301:80"
      - "5302:443"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Workflow Service
  workflowservice:
    build:
      context: .
      dockerfile: services/WorkflowService/Dockerfile
    container_name: saas-workflowservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=DocPay123!
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SaaS_DocPaySystem_Workflow;User Id=sa;Password=DocPay123!@#;TrustServerCertificate=true;
      - ConnectionStrings__ServiceBus=amqp://admin:DocPay123!@rabbitmq:5672
      - Jwt__Issuer=SaaS.DocPaySystem
      - Jwt__Audience=SaaS.DocPaySystem.API
      - Jwt__SecretKey=your-super-secret-key-that-is-at-least-32-characters-long-for-production
    ports:
      - "5401:80"
      - "5402:443"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data:
  redis_data:
  rabbitmq_data:

networks:
  saas-network:
    driver: bridge
